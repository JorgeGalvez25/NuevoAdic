//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6400
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NuevoAdicional {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetReportes")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetReportes : global::System.Data.DataSet {
        
        private TablaAjusteDataTable tableTablaAjuste;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetReportes() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetReportes(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TablaAjuste"] != null)) {
                    base.Tables.Add(new TablaAjusteDataTable(ds.Tables["TablaAjuste"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TablaAjusteDataTable TablaAjuste {
            get {
                return this.tableTablaAjuste;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetReportes cln = ((DataSetReportes)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TablaAjuste"] != null)) {
                    base.Tables.Add(new TablaAjusteDataTable(ds.Tables["TablaAjuste"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTablaAjuste = ((TablaAjusteDataTable)(base.Tables["TablaAjuste"]));
            if ((initTable == true)) {
                if ((this.tableTablaAjuste != null)) {
                    this.tableTablaAjuste.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetReportes";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetReportes.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTablaAjuste = new TablaAjusteDataTable();
            base.Tables.Add(this.tableTablaAjuste);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTablaAjuste() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetReportes ds = new DataSetReportes();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TablaAjusteRowChangeEventHandler(object sender, TablaAjusteRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TablaAjusteDataTable : global::System.Data.TypedTableBase<TablaAjusteRow> {
            
            private global::System.Data.DataColumn columnCombustible;
            
            private global::System.Data.DataColumn columnNombreCombustible;
            
            private global::System.Data.DataColumn columnEntradas;
            
            private global::System.Data.DataColumn columnEntradasFisicas;
            
            private global::System.Data.DataColumn columnInventarioInicial;
            
            private global::System.Data.DataColumn columnInventarioFinal;
            
            private global::System.Data.DataColumn columnSalidaTanques;
            
            private global::System.Data.DataColumn columnVentas;
            
            private global::System.Data.DataColumn columnJarreos;
            
            private global::System.Data.DataColumn columnVentasAntes;
            
            private global::System.Data.DataColumn columnVentasDespues;
            
            private global::System.Data.DataColumn columnAjuste;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnPorAjuste;
            
            private global::System.Data.DataColumn columnPorPemex;
            
            private global::System.Data.DataColumn columnEntradasMerma;
            
            private global::System.Data.DataColumn columnSalidaDispensarios;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnDifAcum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteDataTable() {
                this.TableName = "TablaAjuste";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TablaAjusteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TablaAjusteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CombustibleColumn {
                get {
                    return this.columnCombustible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreCombustibleColumn {
                get {
                    return this.columnNombreCombustible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntradasColumn {
                get {
                    return this.columnEntradas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntradasFisicasColumn {
                get {
                    return this.columnEntradasFisicas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InventarioInicialColumn {
                get {
                    return this.columnInventarioInicial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InventarioFinalColumn {
                get {
                    return this.columnInventarioFinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalidaTanquesColumn {
                get {
                    return this.columnSalidaTanques;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VentasColumn {
                get {
                    return this.columnVentas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JarreosColumn {
                get {
                    return this.columnJarreos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VentasAntesColumn {
                get {
                    return this.columnVentasAntes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VentasDespuesColumn {
                get {
                    return this.columnVentasDespues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AjusteColumn {
                get {
                    return this.columnAjuste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorAjusteColumn {
                get {
                    return this.columnPorAjuste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorPemexColumn {
                get {
                    return this.columnPorPemex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntradasMermaColumn {
                get {
                    return this.columnEntradasMerma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalidaDispensariosColumn {
                get {
                    return this.columnSalidaDispensarios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DifAcumColumn {
                get {
                    return this.columnDifAcum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteRow this[int index] {
                get {
                    return ((TablaAjusteRow)(this.Rows[index]));
                }
            }
            
            public event TablaAjusteRowChangeEventHandler TablaAjusteRowChanging;
            
            public event TablaAjusteRowChangeEventHandler TablaAjusteRowChanged;
            
            public event TablaAjusteRowChangeEventHandler TablaAjusteRowDeleting;
            
            public event TablaAjusteRowChangeEventHandler TablaAjusteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTablaAjusteRow(TablaAjusteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteRow AddTablaAjusteRow(
                        int Combustible, 
                        string NombreCombustible, 
                        double Entradas, 
                        double EntradasFisicas, 
                        double InventarioInicial, 
                        double InventarioFinal, 
                        double SalidaTanques, 
                        double Ventas, 
                        double Jarreos, 
                        double VentasAntes, 
                        double VentasDespues, 
                        double Ajuste, 
                        double Precio, 
                        double PorAjuste, 
                        double PorPemex, 
                        double EntradasMerma, 
                        double SalidaDispensarios, 
                        System.DateTime Fecha, 
                        double DifAcum) {
                TablaAjusteRow rowTablaAjusteRow = ((TablaAjusteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Combustible,
                        NombreCombustible,
                        Entradas,
                        EntradasFisicas,
                        InventarioInicial,
                        InventarioFinal,
                        SalidaTanques,
                        Ventas,
                        Jarreos,
                        VentasAntes,
                        VentasDespues,
                        Ajuste,
                        Precio,
                        PorAjuste,
                        PorPemex,
                        EntradasMerma,
                        SalidaDispensarios,
                        Fecha,
                        DifAcum};
                rowTablaAjusteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTablaAjusteRow);
                return rowTablaAjusteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TablaAjusteDataTable cln = ((TablaAjusteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TablaAjusteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCombustible = base.Columns["Combustible"];
                this.columnNombreCombustible = base.Columns["NombreCombustible"];
                this.columnEntradas = base.Columns["Entradas"];
                this.columnEntradasFisicas = base.Columns["EntradasFisicas"];
                this.columnInventarioInicial = base.Columns["InventarioInicial"];
                this.columnInventarioFinal = base.Columns["InventarioFinal"];
                this.columnSalidaTanques = base.Columns["SalidaTanques"];
                this.columnVentas = base.Columns["Ventas"];
                this.columnJarreos = base.Columns["Jarreos"];
                this.columnVentasAntes = base.Columns["VentasAntes"];
                this.columnVentasDespues = base.Columns["VentasDespues"];
                this.columnAjuste = base.Columns["Ajuste"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnPorAjuste = base.Columns["PorAjuste"];
                this.columnPorPemex = base.Columns["PorPemex"];
                this.columnEntradasMerma = base.Columns["EntradasMerma"];
                this.columnSalidaDispensarios = base.Columns["SalidaDispensarios"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnDifAcum = base.Columns["DifAcum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCombustible = new global::System.Data.DataColumn("Combustible", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCombustible);
                this.columnNombreCombustible = new global::System.Data.DataColumn("NombreCombustible", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreCombustible);
                this.columnEntradas = new global::System.Data.DataColumn("Entradas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntradas);
                this.columnEntradasFisicas = new global::System.Data.DataColumn("EntradasFisicas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntradasFisicas);
                this.columnInventarioInicial = new global::System.Data.DataColumn("InventarioInicial", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInventarioInicial);
                this.columnInventarioFinal = new global::System.Data.DataColumn("InventarioFinal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInventarioFinal);
                this.columnSalidaTanques = new global::System.Data.DataColumn("SalidaTanques", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalidaTanques);
                this.columnVentas = new global::System.Data.DataColumn("Ventas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVentas);
                this.columnJarreos = new global::System.Data.DataColumn("Jarreos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJarreos);
                this.columnVentasAntes = new global::System.Data.DataColumn("VentasAntes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVentasAntes);
                this.columnVentasDespues = new global::System.Data.DataColumn("VentasDespues", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVentasDespues);
                this.columnAjuste = new global::System.Data.DataColumn("Ajuste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAjuste);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnPorAjuste = new global::System.Data.DataColumn("PorAjuste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorAjuste);
                this.columnPorPemex = new global::System.Data.DataColumn("PorPemex", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorPemex);
                this.columnEntradasMerma = new global::System.Data.DataColumn("EntradasMerma", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntradasMerma);
                this.columnSalidaDispensarios = new global::System.Data.DataColumn("SalidaDispensarios", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalidaDispensarios);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnDifAcum = new global::System.Data.DataColumn("DifAcum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifAcum);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteRow NewTablaAjusteRow() {
                return ((TablaAjusteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TablaAjusteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TablaAjusteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TablaAjusteRowChanged != null)) {
                    this.TablaAjusteRowChanged(this, new TablaAjusteRowChangeEvent(((TablaAjusteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TablaAjusteRowChanging != null)) {
                    this.TablaAjusteRowChanging(this, new TablaAjusteRowChangeEvent(((TablaAjusteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TablaAjusteRowDeleted != null)) {
                    this.TablaAjusteRowDeleted(this, new TablaAjusteRowChangeEvent(((TablaAjusteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TablaAjusteRowDeleting != null)) {
                    this.TablaAjusteRowDeleting(this, new TablaAjusteRowChangeEvent(((TablaAjusteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTablaAjusteRow(TablaAjusteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetReportes ds = new DataSetReportes();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TablaAjusteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TablaAjusteRow : global::System.Data.DataRow {
            
            private TablaAjusteDataTable tableTablaAjuste;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TablaAjusteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTablaAjuste = ((TablaAjusteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Combustible {
                get {
                    try {
                        return ((int)(this[this.tableTablaAjuste.CombustibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Combustible\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.CombustibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreCombustible {
                get {
                    try {
                        return ((string)(this[this.tableTablaAjuste.NombreCombustibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreCombustible\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.NombreCombustibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Entradas {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.EntradasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entradas\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.EntradasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EntradasFisicas {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.EntradasFisicasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntradasFisicas\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.EntradasFisicasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InventarioInicial {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.InventarioInicialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InventarioInicial\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.InventarioInicialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InventarioFinal {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.InventarioFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InventarioFinal\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.InventarioFinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalidaTanques {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.SalidaTanquesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalidaTanques\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.SalidaTanquesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ventas {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.VentasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ventas\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.VentasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Jarreos {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.JarreosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jarreos\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.JarreosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VentasAntes {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.VentasAntesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VentasAntes\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.VentasAntesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VentasDespues {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.VentasDespuesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VentasDespues\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.VentasDespuesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ajuste {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.AjusteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ajuste\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.AjusteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Precio {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.PrecioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precio\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PorAjuste {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.PorAjusteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PorAjuste\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.PorAjusteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PorPemex {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.PorPemexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PorPemex\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.PorPemexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EntradasMerma {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.EntradasMermaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntradasMerma\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.EntradasMermaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalidaDispensarios {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.SalidaDispensariosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalidaDispensarios\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.SalidaDispensariosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTablaAjuste.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DifAcum {
                get {
                    try {
                        return ((double)(this[this.tableTablaAjuste.DifAcumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DifAcum\' in table \'TablaAjuste\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTablaAjuste.DifAcumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCombustibleNull() {
                return this.IsNull(this.tableTablaAjuste.CombustibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCombustibleNull() {
                this[this.tableTablaAjuste.CombustibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreCombustibleNull() {
                return this.IsNull(this.tableTablaAjuste.NombreCombustibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreCombustibleNull() {
                this[this.tableTablaAjuste.NombreCombustibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntradasNull() {
                return this.IsNull(this.tableTablaAjuste.EntradasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntradasNull() {
                this[this.tableTablaAjuste.EntradasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntradasFisicasNull() {
                return this.IsNull(this.tableTablaAjuste.EntradasFisicasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntradasFisicasNull() {
                this[this.tableTablaAjuste.EntradasFisicasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInventarioInicialNull() {
                return this.IsNull(this.tableTablaAjuste.InventarioInicialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInventarioInicialNull() {
                this[this.tableTablaAjuste.InventarioInicialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInventarioFinalNull() {
                return this.IsNull(this.tableTablaAjuste.InventarioFinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInventarioFinalNull() {
                this[this.tableTablaAjuste.InventarioFinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalidaTanquesNull() {
                return this.IsNull(this.tableTablaAjuste.SalidaTanquesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalidaTanquesNull() {
                this[this.tableTablaAjuste.SalidaTanquesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVentasNull() {
                return this.IsNull(this.tableTablaAjuste.VentasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVentasNull() {
                this[this.tableTablaAjuste.VentasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJarreosNull() {
                return this.IsNull(this.tableTablaAjuste.JarreosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJarreosNull() {
                this[this.tableTablaAjuste.JarreosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVentasAntesNull() {
                return this.IsNull(this.tableTablaAjuste.VentasAntesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVentasAntesNull() {
                this[this.tableTablaAjuste.VentasAntesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVentasDespuesNull() {
                return this.IsNull(this.tableTablaAjuste.VentasDespuesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVentasDespuesNull() {
                this[this.tableTablaAjuste.VentasDespuesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAjusteNull() {
                return this.IsNull(this.tableTablaAjuste.AjusteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAjusteNull() {
                this[this.tableTablaAjuste.AjusteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNull() {
                return this.IsNull(this.tableTablaAjuste.PrecioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNull() {
                this[this.tableTablaAjuste.PrecioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorAjusteNull() {
                return this.IsNull(this.tableTablaAjuste.PorAjusteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorAjusteNull() {
                this[this.tableTablaAjuste.PorAjusteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorPemexNull() {
                return this.IsNull(this.tableTablaAjuste.PorPemexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorPemexNull() {
                this[this.tableTablaAjuste.PorPemexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntradasMermaNull() {
                return this.IsNull(this.tableTablaAjuste.EntradasMermaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntradasMermaNull() {
                this[this.tableTablaAjuste.EntradasMermaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalidaDispensariosNull() {
                return this.IsNull(this.tableTablaAjuste.SalidaDispensariosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalidaDispensariosNull() {
                this[this.tableTablaAjuste.SalidaDispensariosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tableTablaAjuste.FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tableTablaAjuste.FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDifAcumNull() {
                return this.IsNull(this.tableTablaAjuste.DifAcumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDifAcumNull() {
                this[this.tableTablaAjuste.DifAcumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TablaAjusteRowChangeEvent : global::System.EventArgs {
            
            private TablaAjusteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteRowChangeEvent(TablaAjusteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TablaAjusteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591